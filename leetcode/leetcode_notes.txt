127     HARD    Word Ladder
    The same as 127. BFS, using queue and unordered_set.
    Much faster if delete words from the set when they are first found, not when they are iterated.

211     MEDIUM  Design Add and Search Words Data Structure
    Wrote simple Trie with Node and made search with BFS. Recursive methods tend to be faster although.

212     HARD    Word Search II
    Using Trie to find word. Don't use hash_tables, only marking/unmarking the board and not storing isWord
    in TrieNode but storing the whole word. If word is pushed to the answer vector, then word is cleared in Node.

433     MEDIUM  Minimum Genetic Mutation:
    BFS, using queue of strings and checking for every possibility of change in small string of 8 elements.
