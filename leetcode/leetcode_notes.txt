22      MEDIUM  Generate parentheses
    Recursive call to close and to open paranthese.

39      MEDIUM  Combination sum
    Use simple idea of backtracing.

43      MEDIUM  Multiply strings
    Multiplication using carry and current integers. Clever idea of using answer size = num1 size + num2 size.

46      MEDIUM  Permutations
    Can be solved using backtracking and also using unordered_set.

52      HARD    N-Queens II
    Needed to check solutions + write it on paper. Going column- and row-wise using some smart way + check for diagonals.

77      MEDIUM  Combinations
    There is very cool iterative method but recursive one was faster. Just adding numbers in order of magnitude.

79      MEDIUM  Word search
    DFS and renaming board characters with '*' in order to use less memory to store already used symbols.

127     HARD    Word Ladder
    The same as 127. BFS, using queue and unordered_set.
    Much faster if delete words from the set when they are first found, not when they are iterated.

211     MEDIUM  Design Add and Search Words Data Structure
    Wrote simple Trie with Node and made search with BFS. Recursive methods tend to be faster although.

212     HARD    Word Search II
    Using Trie to find word. Don't use hash_tables, only marking/unmarking the board and not storing isWord
    in TrieNode but storing the whole word. If word is pushed to the answer vector, then word is cleared in Node.

415     EASY    Add strings
    Reversing two inputs and adding a number by number.

433     MEDIUM  Minimum Genetic Mutation:
    BFS, using queue of strings and checking for every possibility of change in small string of 8 elements.
